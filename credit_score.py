# -*- coding: utf-8 -*-
"""credit_score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1drRwHqUiiM9-SSA6QI94ISmRujfpH2HD
"""



"""credit scoring model"""

import pandas as pd


df = pd.read_csv('/content/Credit Score Classification Dataset3 - Credit Score Classification Dataset3.csv')


display(df.head())
display(df.info())

print("Shape of the dataframe:", df.shape)


display(df.describe())


for col in df.select_dtypes(include='object').columns:
    print(f"\nValue counts for column '{col}':")
    print(df[col].value_counts())

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder


X = df.drop('Credit Score', axis=1)
y = df['Credit Score']


le = LabelEncoder()
y = le.fit_transform(y)


X = pd.get_dummies(X, columns=['Gender', 'Education', 'Marital Status', 'Home Ownership'])


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("Shape of X_train:", X_train.shape)
print("Shape of X_test:", X_test.shape)
print("Shape of y_train:", y_train.shape)
print("Shape of y_test:", y_test.shape)

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve


model = LogisticRegression(random_state=42, max_iter=200)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)



print("Classification Report:")
print(classification_report(y_test, y_pred))

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

print("\nROC AUC Score:")

try:
    print(roc_auc_score(y_test, model.predict_proba(X_test), multi_class='ovr'))
except ValueError as e:
    print(f"Could not calculate ROC AUC with 'ovr': {e}")
    try:
         print(roc_auc_score(y_test, model.predict_proba(X_test), multi_class='ovo'))
    except ValueError as e:
        print(f"Could not calculate ROC AUC with 'ovo': {e}")