# -*- coding: utf-8 -*-
"""handwriting character recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17nQWK8NQrKVLSy7x0A4B7wmTIRpxQBnq
"""

import pandas as pd


df = pd.read_csv('/content/hanwriting character recognition.csv')
print(df.shape)
print(df.head())

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from tensorflow.keras.utils import to_categorical

# Separate features and label
X = df.drop('label', axis=1)
y = df['label']

# Encode labels if they are characters
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train-test split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y_encoded, test_size=0.2, random_state=42)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout

model = Sequential([
    Dense(128, activation='relu', input_shape=(16,)),
    Dropout(0.5),
    Dense(num_classes, activation='softmax')
])

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
model.summary()

history = model.fit(X_train, y_train, epochs=10, batch_size=128, validation_split=0.1)

test_loss, test_acc = model.evaluate(X_test, y_test)
print(f"Test accuracy: {test_acc:.4f}")

import matplotlib.pyplot as plt


input_columns = [col for col in df.columns if col.startswith('input')]


df[input_columns].hist(bins=20, figsize=(15, 10))
plt.tight_layout()
plt.show()

test_loss, test_acc = model.evaluate(X_test, y_test)
print(f"Test accuracy: {test_acc:.4f}")

